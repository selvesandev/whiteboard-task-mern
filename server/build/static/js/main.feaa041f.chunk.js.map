{"version":3,"sources":["utils/request.js","store/ActionTypes.js","store/actions/categoryAction.js","store/actions/taskAction.js","components/Loader.js","components/AppInputs.js","components/CategoryBox.js","components/WhiteBoard.js","components/TaskCard.js","components/Modal.js","components/TaskModal.js","App.js","reportWebVitals.js","store/reducers/categoryReducer.js","store/reducers/taskReducer.js","store/reducers/index.js","index.js"],"names":["axios","defaults","baseURL","process","headers","post","interceptors","response","use","error","data","status","Promise","reject","get","url","params","resolve","requestObject","method","put","deleteR","CATEOGRY_GENERAL_STATE","CATEGORY_TASK_REORDER_STATIC","CATEGORY_TASK_UPDATE_STATIC","TASK_GENERAL_STATE","categoryGeneralStateChange","props","value","deep","type","ActionTypes","payload","getCategories","loader","dispatch","a","categories","Error","taskGeneralStateChange","updateTask","id","svg_events","mode","Loader","height","width","color","isFullScreen","className","style","version","xmlns","x","y","viewBox","enableBackground","fill","d","attributeName","attributeType","dur","from","to","repeatCount","onClick","e","TextInputField","onBlur","placeholder","onChange","loading","autoFocus","onFocus","target","select","CategoryBox","category","selectCategory","children","onSave","useState","selectedCategory","setSelectedCategory","categoryName","setCategoryName","useDispatch","categoryState","useSelector","state","useEffect","name","onSubmit","preventDefault","updateCategory","_id","then","res","catch","err","createCategory","saving","text","proTotype","AppWhiteBoard","goodEvents","onStop","eventStream","EventStream","eventStore","EventStore","on","backgroundColor","events","TaskCard","task","onUpdate","onDelete","onDuplicate","deleting","setDeleting","duplicate","setDuplicate","href","disabled","console","log","finally","deleteTask","Modal","onClose","show","title","subTitle","btnText","svgEvents","TaskModal","selectedTask","length","createTask","App","setselectedCategory","setSelectedTask","setMode","addNewCategory","setAddNewCategory","onDragEnd","result","destination","source","draggableId","reOrderCategory","droppableId","map","catIn","String","provided","droppableProps","ref","innerRef","tasks","taIn","index","draggableProps","dragHandleProps","marginRight","window","location","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","fetching","CategoryReducer","action","taskSelected","item","filter","push","TaskReducer","combineReducers","categoryReducer","taskReducer","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.feaa041f.chunk.js","sourcesContent":["import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_PATH;\naxios.defaults.baseURL = apiURL;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (error.response && error.response.data) {\n        switch (error.response.status) {\n            case 400:\n                //open notification\n                break;\n            case 401:\n                //logout\n                break;\n            default:\n                break;\n        }\n    }\n    return Promise.reject(error);\n});\n\n\nexport const get = ({ url, params }) => {\n    let token = null;\n    return new Promise((resolve, reject) => {\n        let requestObject = {\n            method: \"GET\",\n            url,\n            params,\n            // httpsAgent: new https.Agent({ rejectUnauthorized: false })\n        };\n        if (token) {\n            requestObject.headers = {\n                Authorization: `Bearer ${token}`\n            };\n        }\n        return resolve(axios(requestObject));\n    });\n};\n\n\nexport const post = ({ url, data, params }) => {\n    let token = null;\n    return new Promise((resolve, reject) => {\n\n        let requestObject = {\n            method: 'POST',\n            url,\n            data,\n            params,\n            headers: {}\n        };\n\n        if (token) {\n            requestObject.headers = {\n                Authorization: `Bearer ${token}`\n            };\n        }\n\n        // const formData = new FormData();\n\n        // requestObject.headers['Content-Type'] = 'multipart/form-data';\n        // Object.keys(requestObject.data).map((key, i) => {\n        //     formData.append(key, requestObject.data[key]);\n        // });\n        // requestObject.data = formData;\n        return resolve(axios(requestObject));\n    });\n};\n\n\nexport const put = ({ url, data, params }) => {\n    let token = null;\n    return new Promise((resolve, reject) => {\n        let requestObject = {\n            method: 'PUT',\n            url,\n            data,\n            params,\n            headers: {}\n        };\n\n        if (token) {\n            requestObject.headers = {\n                Authorization: `Bearer ${token}`\n            };\n        }\n        return resolve(axios(requestObject));\n    });\n};\n\n\nexport const deleteR = ({ url, data, params = {} }) => {\n    let token = null;\n\n    return new Promise((resolve, reject) => {\n        let requestObject = {\n            method: \"DELETE\",\n            url,\n            data,\n            params,\n            // httpsAgent: new https.Agent({ rejectUnauthorized: false }),\n            headers: {}\n        };\n        if (token) {\n            requestObject.headers = {\n                Authorization: `${token}`\n            };\n        }\n        return resolve(axios(requestObject));\n    });\n};\n\n\n\n\n// export const sendPut = (url, data, params = {}, tokenCheck = false, ctx = {}, fileUpload = false) => {\n//     let token = '';\n//     if (tokenCheck === true) {\n//         token = getCookie('et_au', ctx.req);\n//     }\n//     return new Promise((resolve, reject) => {\n//         if (tokenCheck && !token) return reject({ internal_error: 'Access Token is missing!' });\n\n//         let requestObject = {\n//             method: 'PUT',\n//             url,\n//             data,\n//             params,\n//             httpsAgent: new https.Agent({ rejectUnauthorized: false })\n//         };\n\n//         if (token) {\n//             requestObject.headers = {\n//                 Authorization: `${token}`\n//             };\n//         }\n\n\n//         if (fileUpload) {\n//             requestObject.headers['Content-Type'] = 'multipart/form-data';\n//         }\n//         return resolve(axios(requestObject));\n//     });\n// };\n\n\n\n","//category\nexport const CATEOGRY_GENERAL_STATE = 'CATEOGRY_GENERAL_STATE';\nexport const CATEGORY_TASK_REORDER_STATIC = 'CATEGORY_TASK_REORDER_STATIC';\nexport const CATEGORY_TASK_UPDATE_STATIC = 'CATEGORY_TASK_UPDATE_STATIC';\n\n//task\nexport const TASK_GENERAL_STATE = 'TASK_GENERAL_STATE';\nexport const TASK_DELETE_STATE = 'TASK_DELETE_STATE';\n\n","import { get, post, put } from '../../utils';\nimport * as ActionTypes from '../ActionTypes';\n\nexport const categoryGeneralStateChange = ({ props, value, deep }) => {\n    return { type: ActionTypes.CATEOGRY_GENERAL_STATE, payload: { props, value, deep } }\n}\n\n/**\n * \n * @param {*} loader \n * @returns \n */\nexport const getCategories = (loader = true) => async (dispatch) => {\n    try {\n        if (loader === true)\n            dispatch(categoryGeneralStateChange({ props: 'fetching', value: true }));\n\n        const categories = await get({ url: '/category' });\n        dispatch(categoryGeneralStateChange({ props: 'data', value: categories.data.data }));\n\n    } catch (err) {\n        throw Error(err);\n    } finally {\n        dispatch(categoryGeneralStateChange({ props: 'fetching', value: false }));\n    }\n}\n\n/**\n * \n * @param {*} param0 \n * @returns \n */\nexport const createCategory = ({ name }) => async (dispatch) => {\n    try {\n        dispatch(categoryGeneralStateChange({ props: 'saving', value: true }));\n        return await post({ url: '/category', data: { name } });\n    } catch (err) {\n        throw Error(err);\n    } finally {\n        dispatch(categoryGeneralStateChange({ props: 'saving', value: false }));\n    }\n}\n\n/**\n * \n * @param {*} param0 \n * @returns \n */\nexport const updateCategory = ({ id, name }) => async (dispatch) => {\n    try {\n        dispatch(categoryGeneralStateChange({ props: 'saving', value: true }));\n        return await put({ url: `/category/${id}`, data: { name } });\n    } catch (err) {\n        throw Error(err);\n    } finally {\n        dispatch(categoryGeneralStateChange({ props: 'saving', value: false }));\n    }\n}\n\n\n/**\n * \n * @param {*} param0 \n * @returns \n */\nexport const downloadBackup = () => async (dispatch) => {\n    try {\n        return await get({ url: `/category/download` });\n    } catch (err) {\n        throw Error(err);\n    } finally {\n    }\n}","import * as ActionTypes from '../ActionTypes';\nimport { deleteR, post, put } from '../../utils';\nimport { getCategories } from './categoryAction';\n\n\nexport const taskGeneralStateChange = ({ props, value, deep }) => {\n    return { type: ActionTypes.TASK_GENERAL_STATE, payload: { props, value, deep } }\n}\n\nexport const createTask = ({ category, svg_events }) => async (dispatch) => {\n    try {\n        dispatch(taskGeneralStateChange({ props: 'saving', value: true }));\n        return await post({ url: '/task', data: { category, svg_events } });\n    } catch (err) {\n        throw Error(err);\n    } finally {\n        dispatch(taskGeneralStateChange({ props: 'saving', value: false }));\n    }\n}\n\nexport const updateTask = ({ id, svg_events, mode = 'CREATE' }) => async (dispatch) => {\n    try {\n        dispatch(taskGeneralStateChange({ props: 'saving', value: true }));\n        dispatch({ type: ActionTypes.CATEGORY_TASK_UPDATE_STATIC, payload: { id, svg_events } });\n        const response = await put({ url: `/task/${id}`, data: { svg_events }, params: { mode } });\n        return response;\n    } catch (err) {\n        throw Error(err);\n    } finally {\n        dispatch(taskGeneralStateChange({ props: 'saving', value: false }));\n    }\n}\n\n\nexport const deleteTask = ({ id }) => async (dispatch) => {\n    try {\n        const response = await deleteR({ url: `/task/${id}` });\n        dispatch(getCategories(false));\n        return response;\n    } catch (err) {\n        throw Error(err);\n    } finally {\n    }\n}\n\nexport const reOrderCategory = ({ destination, id, source }) => async (dispatch) => {\n    try {\n        if (destination === source) return;\n        if (!destination) {\n            return;\n        }\n        dispatch({ type: ActionTypes.CATEGORY_TASK_REORDER_STATIC, payload: { destination, source, id } });\n        const response = await put({ url: `/task/reorder/${id}`, data: { category: destination } }).catch(err => {\n            console.log(err);\n        });\n        dispatch(getCategories(false));\n        return response;\n    } catch (err) {\n        throw Error(err);\n    } finally {\n    }\n}\n\n\n","const Loader = ({ height = 100, width = 100, color = '#fff', isFullScreen = false }) => {\n    return <div><div className={'loader ' + (isFullScreen ? 'full_screen' : '')}><svg style={{ width, height }} version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n        viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 0 0\" >\n        <path fill={color} d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n            <animateTransform\n                attributeName=\"transform\"\n                attributeType=\"XML\"\n                type=\"rotate\"\n                dur=\"1s\"\n                from=\"0 50 50\"\n                to=\"360 50 50\"\n                repeatCount=\"indefinite\" />\n        </path>\n    </svg>\n\n    </div>\n        {isFullScreen ? <div className=\"bg\" onClick={e => {\n\n        }} /> : null}\n    </div>;\n}\n\nexport { Loader };","import { Loader } from \"./Loader\";\n\nconst TextInputField = ({ value, onBlur, placeholder, onChange, loading }) => {\n    return <div className=\"input_container\"><input type=\"text\" className=\"input_element\" placeholder={placeholder} autoFocus={true} onFocus={(e) => {\n        e.target.select();\n    }} value={value} onBlur={onBlur} onChange={(e) => {\n        if (onChange)\n            onChange(e.target.value);\n    }} />\n        {loading ? <Loader height={40} width={40} color=\"#4caf50\" /> : null}\n    </div>;\n}\n\nexport { TextInputField };","import { useState, useEffect } from 'react';\nimport { TextInputField } from './AppInputs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createCategory, getCategories, updateCategory } from '../store/actions';\n\n\n/**\n * \n * @param {*} param0 \n * @returns \n */\nconst CategoryBox = ({ category, selectCategory, children, mode = 'edit', onBlur, onSave }) => {\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const [categoryName, setCategoryName] = useState('');\n    const dispatch = useDispatch();\n\n    const categoryState = useSelector(state => state.category);\n\n    useEffect(() => {\n        if (category) {\n            setCategoryName(category.name);\n        }\n    }, [])\n\n    return <section>\n        {mode !== 'add' && selectedCategory !== category.id ? <h2 className=\"cat_title\" onClick={() => {\n            setSelectedCategory(category.id);\n            if (selectCategory) {\n                selectCategory(category);\n            }\n        }}><span>{category.name}</span></h2> :\n            <form onSubmit={(e) => {\n                e.preventDefault();\n                if (!category) {\n                    dispatch(createCategory({ name: categoryName })).then(res => {\n                        dispatch(getCategories());\n                        if (onSave) onSave();\n                    }).catch(err => {\n                    });\n                } else {\n                    dispatch(updateCategory({ id: category._id, name: categoryName })).then(res => {\n                        setSelectedCategory(null);\n                        dispatch(getCategories());\n                        if (onSave) onSave();\n\n                    }).catch(err => {\n\n                    });\n                }\n            }}>\n                <TextInputField loading={categoryState.saving} onChange={(text) => {\n                    setCategoryName(text);\n                }} placeholder={'Name your category'} onBlur={() => {\n                    setSelectedCategory(null);\n                    if (onBlur)\n                        onBlur();\n                }} value={categoryName} />\n            </form>}\n\n        {children}\n    </section>\n}\n\nCategoryBox.proTotype = {\n    // categoryName: PropTypes.string.isRequired\n};\n\nexport { CategoryBox };","import { Whiteboard, EventStream, EventStore } from '@ohtomi/react-whiteboard';\n\n\nconst AppWhiteBoard = ({ width, height = 150, goodEvents, onStop }) => {\n    const eventStream = new EventStream();\n    const eventStore = new EventStore();\n    eventStore.goodEvents = [];\n\n    if (goodEvents) {\n        eventStore.goodEvents = goodEvents;\n    }\n    eventStream.on('stop', function () {\n        if (onStop) onStop(eventStore.goodEvents);\n    });\n\n    return <div>\n        <Whiteboard style={{ backgroundColor: 'white' }} height={height} width={width} events={eventStream} eventStore={eventStore} />\n    </div>\n}\n\nexport { AppWhiteBoard };","import { AppWhiteBoard } from \"./WhiteBoard\"\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, getCategories, updateTask } from \"../store/actions\";\nimport { useState } from 'react';\nimport { Whiteboard, EventStream, EventStore } from '@ohtomi/react-whiteboard';\n\nconst eventStream = new EventStream();\nconst eventStore = new EventStore();\n\n\nconst TaskCard = ({ task, onUpdate, onDelete, onDuplicate }) => {\n    const dispatch = useDispatch();\n    const [deleting, setDeleting] = useState(false);\n    const [duplicate, setDuplicate] = useState(false);\n    // console.log(task.svg_events.length);\n    eventStore.goodEvents = task.svg_events;\n    return <div\n        className={'notes n_card '} style={{}}>\n\n        <Whiteboard style={{ backgroundColor: 'white' }} height={150} events={eventStream} eventStore={eventStore} />\n\n        {/* {task.svg_events ?\n            <AppWhiteBoard goodEvents={task.svg_events} /> : null} */}\n        <div className=\"card_action\">\n            <a href=\"/\" disabled={duplicate} className={(duplicate ? 'disabled' : '')} onClick={(e) => {\n                e.preventDefault();\n                setDuplicate(true);\n                dispatch(updateTask({ id: task._id, svg_events: task.svg_events, mode: 'DUPLICATE' })).then((res) => {\n                    dispatch(getCategories());\n                }).catch(err => {\n                    console.log(err);\n                }).finally(() => {\n                    setDuplicate(false);\n                });\n            }}>\n                <i className={\"far fa-copy \" + (duplicate ? 'rotate_' : '')}></i>\n            </a>\n\n            <a href=\"/\" onClick={(e) => {\n                e.preventDefault();\n                // setShowModal(true);\n                if (onUpdate) onUpdate();\n            }} >\n                <i className=\"far fa-pen\"></i>\n            </a>\n            <a href=\"/\" disabled={deleting} className={(deleting ? 'disabled' : '')} onClick={(e) => {\n                e.preventDefault();\n                setDeleting(true);\n                dispatch(deleteTask({ id: task._id })).then(() => {\n                    setDeleting(false);\n                })\n            }}>\n                <i className={\"far fa-trash \" + (deleting ? 'rotate_' : '')}></i>\n            </a>\n        </div>\n\n\n\n    </div>\n}\n\nexport { TaskCard };","\nconst Modal = ({ children, onClose, show = false, width = 500, height = 500, title, subTitle, onSave, loading = false, btnText = 'Create Task' }) => {\n\n    if (show)\n        return <div>\n            <div className=\"modal\" style={{ width, height }}>\n                <div className={'title'}>\n                    {title ? <h1 className={''}>{title}</h1> : null}\n                    {subTitle ? <small>{subTitle}</small> : null}\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n                <div className=\"modal-action\">\n                    <div className=\"task_act_button\">\n                        <button disabled={loading} className={`btn btn-primary ${loading ? 'disabled' : ''}`} type=\"submit\" onClick={() => {\n                            if (onSave) onSave();\n                        }}>{loading ? 'Saving...' : btnText}</button>\n                  &nbsp;&nbsp;\n                  <button type=\"button\" className=\"btn\" onClick={() => {\n                            if (onClose) {\n                                onClose();\n                            }\n                        }}>Cancel</button>\n                    </div>\n\n                </div>\n            </div>\n            <div className=\"bg\" onClick={e => {\n                e.preventDefault();\n                if (onClose) {\n                    onClose();\n                }\n            }} />\n        </div>\n    return null;\n}\n\nexport { Modal };","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTask, getCategories, updateTask } from '../store/actions';\nimport { Modal } from \"./Modal\";\nimport { AppWhiteBoard } from \"./WhiteBoard\";\n\nlet svgEvents = [];\nconst TaskModal = ({ onClose, height = 440, category, show, mode = 'CREATE', selectedTask }) => {\n    const dispatch = useDispatch();\n    const task = useSelector(state => state.task);\n    let title = `Add New Task \"${category ? category.name : \"\"}\"`;\n    let goodEvents = null;\n    if (selectedTask) {\n        title = mode === 'CREATE' ? `Update Task \"${category ? category.name : \"\"}\"` : `Duplicate Task \"${category ? category.name : \"\"}\"`;\n        goodEvents = selectedTask.svg_events;\n        svgEvents = selectedTask.svg_events;\n    }\n    console.log(show);\n\n    return <Modal\n        btnText={!selectedTask ? 'Create Task' : (mode === 'CREATE' ? 'Update Task' : 'Duplicate Task')}\n        loading={task.saving}\n        onSave={() => {\n            if (svgEvents && svgEvents.length) {\n                if (selectedTask) {\n                    dispatch(updateTask({ svg_events: svgEvents, id: selectedTask._id, mode })).then(res => {\n                        dispatch(getCategories());\n                        onClose();\n                    }).catch(err => {\n                        console.log(err);\n                    })\n                } else {\n                    dispatch(createTask({ svg_events: svgEvents, category: category._id })).then(res => {\n                        dispatch(getCategories());\n                        svgEvents = [];\n                        onClose();\n                    }).catch(err => {\n                        console.log(err);\n                    })\n                }\n            }\n        }}\n        height={height}\n        subTitle={\"Draw on the white board to and create a new task.\"}\n        title={title}\n        onClose={() => {\n            if (onClose) onClose();\n        }}\n        show={show}\n    >\n        <AppWhiteBoard goodEvents={goodEvents} onStop={(goodEvents) => {\n            svgEvents = goodEvents;\n        }} height={220} width={500} />\n        <p style={{ color: \"#999\" }}>\n            <small>Click and move your mouse to start drawing</small>\n        </p>\n    </Modal>\n}\n\nexport { TaskModal };","import { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { getCategories, reOrderCategory } from './store/actions';\nimport {\n  CategoryBox,\n  TaskCard,\n  TaskModal,\n} from \"./components\";\nimport { Loader } from \"./components/Loader\";\n\n\n// TODO Scroll to the right most corner when new category added. on content overflow\n\n\nfunction App() {\n  const [selectedCategory, setselectedCategory] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [mode, setMode] = useState('CREATE');\n\n  const [addNewCategory, setAddNewCategory] = useState(false);\n  const dispatch = useDispatch();\n  const category = useSelector(state => state.category)\n  useEffect(() => {\n    dispatch(getCategories()).catch(err => {\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <DragDropContext\n        onDragEnd={(result) => {\n          const { destination, source, draggableId } = result;\n          dispatch(reOrderCategory({ destination: destination.droppableId, id: draggableId, source: source.droppableId }));\n        }}\n      >\n        {category.data.map((category, catIn) => {\n          return (\n            <Droppable droppableId={String(category._id)} key={catIn}>\n              {provided => (\n                <section className=\"category_iterator\" {...provided.droppableProps} ref={provided.innerRef}>\n                  <CategoryBox\n                    selectCategory={(category) => { }}\n                    key={catIn}\n                    category={category}\n                  >\n                    {category.tasks ? category.tasks.map((task, taIn) => {\n                      return <Draggable index={taIn} draggableId={String(task._id)} key={taIn + catIn}>\n                        {provided =>\n                          <div ref={provided.innerRef} {...provided.draggableProps}\n                            {...provided.dragHandleProps}>\n                            <TaskCard onUpdate={() => {\n                              setSelectedTask(task);\n                              setselectedCategory(category);\n                            }} onDuplicate={() => {\n                              setSelectedTask(task);\n                              setselectedCategory(category);\n                              setMode('DUPLICATE');\n                            }} key={taIn} task={task} />\n                          </div>\n                        }\n                      </Draggable>;\n                    }) : null}\n                    {provided.placeholder}\n\n                    <div\n                      onClick={() => {\n                        setSelectedTask(null);\n                        setselectedCategory(category);\n                      }}\n                      className={\"action_add action_add_item\"}\n                    >\n                      <i className=\"fas fa-plus-circle\"></i> &nbsp;Add New Task..\n                  </div>\n                  </CategoryBox>\n                </section>\n              )}\n            </Droppable>\n          );\n        })}\n      </DragDropContext>\n\n      {addNewCategory ? <section className=\"category_iterator\">\n        <CategoryBox onSave={() => {\n          setAddNewCategory(false);\n        }} onBlur={() => {\n          setAddNewCategory(false);\n        }} mode={'add'} />\n      </section> : <section style={{ marginRight: 40 }}\n        onClick={() => {\n          setAddNewCategory(true);\n        }}\n        className=\"action_add action_add_category\"\n      >\n        <i className=\"fas fa-plus-circle\"></i> &nbsp;Add New Category\n      </section>}\n\n      <TaskModal mode={mode} selectedTask={selectedTask} show={selectedCategory !== null} category={selectedCategory} onClose={() => {\n        setselectedCategory(null);\n        setSelectedTask(null);\n      }} />\n\n\n\n      {category.data.length > 0 ? <div className={'downloder'}>\n        <button onClick={() => {\n          window.location.href = process.env.REACT_APP_API_PATH + '/category/download';\n        }}>Download</button>\n      </div> : null}\n    </div >\n  );\n}\n\nexport default App;\n\n\n\n// requestAnimationFrame(() => {\n  // events.changeStrokeColor(\"blue\");\n  // events.changeStrokeWidth(5)\n  // events.startDrawing(100, 100)\n  // events.pushPoint(100, 200)\n  // events.pushPoint(200, 200)\n  // events.pushPoint(200, 100)\n  // events.pushPoint(110, 100)\n  // events.stopDrawing()\n  // events.undo()\n  // events.undo()\n// });\n\n// const events = new EventStream();\n// const eventStore = new EventStore();\n// eventStore.goodEvents = goodEvents;\n// events.on(\"selectLayer\", function () {\n//   console.log(\"selectLayer\");\n// });\n// events.on(\"addLayer\", function (value) {\n//   console.log(\"addLayer\", value);\n// });\n\n// events.on(\"start\", function (value) {\n//   console.log(\"start\", value);\n// });\n\n// events.on(\"stop\", function (value) {\n//   console.log(\"stop\", value);\n\n//   console.log(eventStore.goodEvents);\n// });\n\n// events.on(\"startDragging\", function (value) {\n//   console.log(\"startDragging\", value);\n// });\n// events.on(\"stopDragging\", function (value) {\n//   console.log(\"stopDragging\", value);\n// });\n\n// events.on(\"drag\", function (value) {\n//   console.log(\"drag\", value);\n// });\n\n// events.on(\"startResizing\", function (value) {\n//   console.log(\"startResizing\", value);\n// });\n// events.on(\"stopResizing\", function (value) {\n//   console.log(\"stopResizing\", value);\n// });\n// events.on(\"resize\", function (value) {\n//   console.log(\"stopDragging\", value);\n// });\n\n// events.on(\"redo\", function (value) {\n//   console.log(\"redo\", value);\n// });\n\n// events.on(\"undo\", function (value) {\n//   console.log(\"undo\", value);\n// });\n// events.on(\"clear\", function (value) {\n//   console.log(\"clear\", value);\n// });\n// hkl_user \n// DlA1fsCnWsp1PjIz\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as ActionTypes from './../ActionTypes';\n\nconst INITIAL_STATE = {\n    saving: false,\n    data: [\n        // {name:'category',tasks:[{},{}]},\n        // {name:'category',tasks:[{},{}]}\n    ],\n    fetching: false,\n}\n\nconst CategoryReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ActionTypes.CATEOGRY_GENERAL_STATE:\n            if (!action.payload.deep) {\n                state[action.payload.props] = action.payload.value;\n            }\n            else\n                state[action.payload.props][action.payload.deep] = action.payload.value;\n            return {\n                ...state\n            };\n        case ActionTypes.CATEGORY_TASK_REORDER_STATIC:\n            let taskSelected = {};\n            state.data.map(item => {\n                item.tasks = item.tasks.filter(task => {\n                    if (task._id === action.payload.id) {\n                        taskSelected = task;\n                    } else {\n                        return task;\n                    }\n                });\n                return item;\n            });\n\n\n            state.data.map(item => {\n                if (item._id === action.payload.destination) {\n                    item.tasks.push(taskSelected);\n                }\n                return item;\n            });\n\n\n            return {\n                ...state\n            };\n        case ActionTypes.CATEGORY_TASK_UPDATE_STATIC:\n            state.data.map(item => {\n                item.tasks = item.tasks.map(task => {\n                    if (task._id === action.payload.id) {\n                        task.svg_events = action.payload.svg_events;\n                    }\n                    return task;\n                });\n                return item;\n            });\n\n\n            return {\n                ...state\n            };\n\n        // case ActionTypes.TASK_DELETE_STATE:\n        // let categoryIndex = null;\n        // let taskIndex = null;\n\n        // try {\n        //     state.data.map((item, c) => {\n        //         categoryIndex = c;\n        //         item.tasks.map((task, t) => {\n        //             if (task._id === action.payload.value) {\n        //                 taskIndex = t;\n        //                 throw Error(\"stop\");\n        //             }\n        //         })\n        //     })\n        // } catch (e) {\n\n        // }\n        // if (categoryIndex !== null && taskIndex !== null && state.data[categoryIndex]) {\n        //     state.data[categoryIndex].tasks.splice(taskIndex, 1);\n        // }\n\n        //     return {\n        //         ...state\n        //     }\n        default:\n            return { ...state }\n    }\n}\n\nexport default CategoryReducer;","import * as ActionTypes from './../ActionTypes';\n\nconst INITIAL_STATE = {\n    saving: false,\n    data: []\n}\n\nconst TaskReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ActionTypes.TASK_GENERAL_STATE:\n            if (!action.payload.deep) {\n                state[action.payload.props] = action.payload.value;\n            }\n            else\n                state[action.payload.props][action.payload.deep] = action.payload.value;\n            return {\n                ...state\n            };\n        default:\n            return { ...state }\n    }\n}\n\nexport default TaskReducer;","import { combineReducers } from 'redux';\nimport categoryReducer from './categoryReducer';\nimport taskReducer from './taskReducer';\n\nexport default combineReducers({\n    category: categoryReducer,\n    task: taskReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/main.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './store/reducers';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}